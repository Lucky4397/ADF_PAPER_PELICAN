{
	"name": "NASA_PARSE_JSON",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NASA_BLOB_JSON",
						"type": "DatasetReference"
					},
					"name": "NASAJSONPARSE"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FLAT1"
				},
				{
					"name": "FLAT2"
				},
				{
					"name": "HEADARRAY"
				}
			],
			"scriptLines": [
				"source(output(",
				"          element_count as short,",
				"          links as (next as string, prev as string, self as string),",
				"          near_earth_objects as ({2025-03-20} as (absolute_magnitude_h as double, close_approach_data as (close_approach_date as date, close_approach_date_full as string, epoch_date_close_approach as long, miss_distance as (astronomical as double, kilometers as double, lunar as double, miles as double), orbiting_body as string, relative_velocity as (kilometers_per_hour as double, kilometers_per_second as double, miles_per_hour as double))[], estimated_diameter as (feet as (estimated_diameter_max as double, estimated_diameter_min as double), kilometers as (estimated_diameter_max as double, estimated_diameter_min as double), meters as (estimated_diameter_max as double, estimated_diameter_min as double), miles as (estimated_diameter_max as double, estimated_diameter_min as double)), id as integer, is_potentially_hazardous_asteroid as boolean, is_sentry_object as boolean, links as (self as string), name as string, nasa_jpl_url as string, neo_reference_id as integer)[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> NASAJSONPARSE",
				"HEADARRAY foldDown(unroll(HEADER),",
				"     mapColumn(",
				"          element_count = HEADER.element_count,",
				"          next = HEADER.links.next,",
				"          prev = HEADER.links.prev,",
				"          self = HEADER.links.self,",
				"          near_earth_objects = HEADER.near_earth_objects",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FLAT1",
				"FLAT1 foldDown(unroll(near_earth_objects),",
				"     mapColumn(",
				"          epoch_date_close_approach = near_earth_objects.close_approach_data.epoch_date_close_approach",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FLAT2",
				"NASAJSONPARSE aggregate(HEADER = collect(@(element_count=element_count,links=links,near_earth_objects=near_earth_objects))) ~> HEADARRAY"
			]
		}
	}
}